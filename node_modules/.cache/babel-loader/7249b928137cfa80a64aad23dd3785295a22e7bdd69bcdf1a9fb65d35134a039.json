{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonardo\\\\Desktop\\\\react-estudo\\\\estudo\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport lixeira from \"./assets/images/lixeira.png\";\nimport { useState } from \"react\";\nimport Header from \"./Header\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // array onde as tarefas são armazenadas\n  // aqui foi utilizado lifting state up, pois se eu colocasse o array das tarefas no componente FormTasks ou no TasksLists (que são irmãos) o fluxo de dados não aconteceria, pois só acontece entre pai-filho e não irmão-irmão\n  const [task, setTask] = useState([]);\n\n  // adicionando tarefas\n  function handleAddTask(item) {\n    setTask(items => [...items, item]);\n  }\n\n  // apagando tarefas\n  function handleDeleteTask(id) {\n    setTask(items => items.filter(item => item.id !== id));\n  }\n\n  // resentando tarefas\n  function handleResetTask() {\n    setTask([]);\n  }\n\n  // alternando o valor da propriedade completed da tarefa quando o checkbox é alterado\n  function ToggleCompletedTask(id) {\n    setTask(items => items.map(item => item.id === id ? {\n      ...item,\n      completed: !item.completed\n    } : item));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormTasks, {\n      task: task,\n      setTask: setTask,\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksList, {\n      task: task,\n      onDeleteTask: handleDeleteTask,\n      onResetTask: handleResetTask,\n      onToggleCompletedTask: ToggleCompletedTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      task: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n// function Header() {\n//   return (\n//     <>\n//       <h1 className=\"title\">To-Do List</h1>;\n//       <div className=\"custom-shape-divider-top-1714657111\">\n//         <svg\n//           data-name=\"Layer 1\"\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//           viewBox=\"0 0 1200 120\"\n//           preserveAspectRatio=\"none\"\n//         >\n//           <path\n//             d=\"M985.66,92.83C906.67,72,823.78,31,743.84,14.19c-82.26-17.34-168.06-16.33-250.45.39-57.84,11.73-114,31.07-172,41.86A600.21,600.21,0,0,1,0,27.35V120H1200V95.8C1132.19,118.92,1055.71,111.31,985.66,92.83Z\"\n//             className=\"shape-fill\"\n//           ></path>\n//         </svg>\n//       </div>\n//     </>\n//   );\n// }\n_s(App, \"e4fANLrMNZRK3DN5tkGMV7bVkUU=\");\n_c = App;\nfunction FormTasks({\n  onAddTask\n}) {\n  _s2();\n  const [inputTask, setInputTask] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!inputTask) return;\n    const newTask = {\n      id: Date.now(),\n      task: inputTask,\n      completed: false\n    };\n    onAddTask(newTask);\n    setInputTask(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Digite a tarefa a ser executada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputTask,\n      onChange: e => setInputTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-add\",\n      children: \"Adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s2(FormTasks, \"2i72yAbglsSaxJ1uDUR2E6wByxA=\");\n_c2 = FormTasks;\nfunction TasksList({\n  task,\n  onDeleteTask,\n  onResetTask,\n  onToggleCompletedTask\n}) {\n  _s3();\n  let tarefas;\n  const [order, setOrder] = useState(\"\");\n  if (order === \"default\" || order === \"\") {\n    tarefas = task;\n  }\n\n  // Essas ordenações foram feitas com ajuda do GPT\n  if (order === \"tasksComplete\") {\n    tarefas = task.slice().sort((a, b) => Number(a.completed) - Number(b.completed));\n  }\n  if (order === \"alphabeticalOrder\") {\n    tarefas = task.slice().sort((a, b) => a.task.localeCompare(b.task));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tarefas.map((item, i) => /*#__PURE__*/_jsxDEV(Tasks, {\n        item: item,\n        onClick: onDeleteTask,\n        onToggle: onToggleCompletedTask\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), tarefas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: order,\n        onChange: e => setOrder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"\",\n          hidden: true,\n          children: \"Como voc\\xEA quer ordenar as tarefas?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Ordem de entrada (padr\\xE3o)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tasksComplete\",\n          children: \"Tarefas Completas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alphabeticalOrder\",\n          children: \"Ordem Alfab\\xE9tica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-reset\",\n        onClick: onResetTask,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s3(TasksList, \"7RG2mDvhhr48GwuPeVY7qaKCelc=\");\n_c3 = TasksList;\nfunction Tasks({\n  item,\n  onClick,\n  onToggle\n}) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"checkbox\",\n      type: \"checkbox\",\n      value: item.completed,\n      onChange: () => onToggle(item.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `task ${item.completed ? \"completed\" : \"\"}`,\n      children: item.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-lixeira\",\n      onClick: () => onClick(item.id),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: lixeira,\n        alt: \"Lixeira\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Tasks;\nfunction Footer({\n  task\n}) {\n  const lengthTask = task.length;\n  const lengthTaskCompleted = task.filter(item => item.completed === true).length;\n  const percentageTaskCompleted = Number((lengthTaskCompleted / lengthTask * 100).toFixed(2));\n  //   console.log(percentageTaskCompleted);\n\n  if (lengthTask === 0) {\n    return /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"Voc\\xEA ainda n\\xE3o adicionou nenhuma tarefa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 12\n    }, this);\n  }\n  return percentageTaskCompleted === 100 ? /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: [\"Voc\\xEA concluiu toda(s) as \", lengthTask, \" tarefa(s). Parabens!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: [\"Voc\\xEA tem \", lengthTask, \" tarefa(s) e \", lengthTaskCompleted, \" (\", percentageTaskCompleted, \"%) j\\xE1 foram conclu\\xEDda(s)\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Footer;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"FormTasks\");\n$RefreshReg$(_c3, \"TasksList\");\n$RefreshReg$(_c4, \"Tasks\");\n$RefreshReg$(_c5, \"Footer\");","map":{"version":3,"names":["lixeira","useState","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","task","setTask","handleAddTask","item","items","handleDeleteTask","id","filter","handleResetTask","ToggleCompletedTask","map","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","FormTasks","onAddTask","TasksList","onDeleteTask","onResetTask","onToggleCompletedTask","Footer","_c","_s2","inputTask","setInputTask","handleSubmit","e","preventDefault","newTask","Date","now","onSubmit","type","value","onChange","target","_c2","_s3","tarefas","order","setOrder","slice","sort","a","b","Number","localeCompare","i","Tasks","onClick","onToggle","length","disabled","hidden","_c3","src","alt","_c4","lengthTask","lengthTaskCompleted","percentageTaskCompleted","toFixed","_c5","$RefreshReg$"],"sources":["C:/Users/Leonardo/Desktop/react-estudo/estudo/src/App.js"],"sourcesContent":["import lixeira from \"./assets/images/lixeira.png\";\nimport { useState } from \"react\";\nimport Header from \"./Header\";\n\nexport default function App() {\n  // array onde as tarefas são armazenadas\n  // aqui foi utilizado lifting state up, pois se eu colocasse o array das tarefas no componente FormTasks ou no TasksLists (que são irmãos) o fluxo de dados não aconteceria, pois só acontece entre pai-filho e não irmão-irmão\n  const [task, setTask] = useState([]);\n\n  // adicionando tarefas\n  function handleAddTask(item) {\n    setTask((items) => [...items, item]);\n  }\n\n  // apagando tarefas\n  function handleDeleteTask(id) {\n    setTask((items) => items.filter((item) => item.id !== id));\n  }\n\n  // resentando tarefas\n  function handleResetTask() {\n    setTask([]);\n  }\n\n  // alternando o valor da propriedade completed da tarefa quando o checkbox é alterado\n  function ToggleCompletedTask(id) {\n    setTask((items) =>\n      items.map((item) =>\n        item.id === id ? { ...item, completed: !item.completed } : item\n      )\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <FormTasks task={task} setTask={setTask} onAddTask={handleAddTask} />\n      <TasksList\n        task={task}\n        onDeleteTask={handleDeleteTask}\n        onResetTask={handleResetTask}\n        onToggleCompletedTask={ToggleCompletedTask}\n      />\n      <Footer task={task} />\n    </div>\n  );\n}\n\n// function Header() {\n//   return (\n//     <>\n//       <h1 className=\"title\">To-Do List</h1>;\n//       <div className=\"custom-shape-divider-top-1714657111\">\n//         <svg\n//           data-name=\"Layer 1\"\n//           xmlns=\"http://www.w3.org/2000/svg\"\n//           viewBox=\"0 0 1200 120\"\n//           preserveAspectRatio=\"none\"\n//         >\n//           <path\n//             d=\"M985.66,92.83C906.67,72,823.78,31,743.84,14.19c-82.26-17.34-168.06-16.33-250.45.39-57.84,11.73-114,31.07-172,41.86A600.21,600.21,0,0,1,0,27.35V120H1200V95.8C1132.19,118.92,1055.71,111.31,985.66,92.83Z\"\n//             className=\"shape-fill\"\n//           ></path>\n//         </svg>\n//       </div>\n//     </>\n//   );\n// }\n\nfunction FormTasks({ onAddTask }) {\n  const [inputTask, setInputTask] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!inputTask) return;\n\n    const newTask = { id: Date.now(), task: inputTask, completed: false };\n\n    onAddTask(newTask);\n\n    setInputTask(\"\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>Digite a tarefa a ser executada</label>\n      <input\n        type=\"text\"\n        value={inputTask}\n        onChange={(e) => setInputTask(e.target.value)}\n      />\n      <button className=\"btn-add\">Adicionar</button>\n    </form>\n  );\n}\n\nfunction TasksList({ task, onDeleteTask, onResetTask, onToggleCompletedTask }) {\n  let tarefas;\n  const [order, setOrder] = useState(\"\");\n\n  if (order === \"default\" || order === \"\") {\n    tarefas = task;\n  }\n\n  // Essas ordenações foram feitas com ajuda do GPT\n  if (order === \"tasksComplete\") {\n    tarefas = task\n      .slice()\n      .sort((a, b) => Number(a.completed) - Number(b.completed));\n  }\n\n  if (order === \"alphabeticalOrder\") {\n    tarefas = task.slice().sort((a, b) => a.task.localeCompare(b.task));\n  }\n\n  return (\n    <>\n      <ul>\n        {tarefas.map((item, i) => (\n          <Tasks\n            item={item}\n            key={item.id}\n            onClick={onDeleteTask}\n            onToggle={onToggleCompletedTask}\n          />\n        ))}\n      </ul>\n      {tarefas.length > 0 && (\n        <div className=\"task-options\">\n          <select value={order} onChange={(e) => setOrder(e.target.value)}>\n            <option disabled value=\"\" hidden>\n              Como você quer ordenar as tarefas?\n            </option>\n            <option value=\"default\">Ordem de entrada (padrão)</option>\n            <option value=\"tasksComplete\">Tarefas Completas</option>\n            <option value=\"alphabeticalOrder\">Ordem Alfabética</option>\n          </select>\n          <button className=\"btn-reset\" onClick={onResetTask}>\n            Reset\n          </button>\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction Tasks({ item, onClick, onToggle }) {\n  return (\n    <li>\n      <input\n        className=\"checkbox\"\n        type=\"checkbox\"\n        value={item.completed}\n        onChange={() => onToggle(item.id)}\n      />\n      <span className={`task ${item.completed ? \"completed\" : \"\"}`}>\n        {item.task}\n      </span>\n      <button className=\"btn-lixeira\" onClick={() => onClick(item.id)}>\n        <img src={lixeira} alt=\"Lixeira\" />\n      </button>\n    </li>\n  );\n}\n\nfunction Footer({ task }) {\n  const lengthTask = task.length;\n  const lengthTaskCompleted = task.filter(\n    (item) => item.completed === true\n  ).length;\n  const percentageTaskCompleted = Number(\n    ((lengthTaskCompleted / lengthTask) * 100).toFixed(2)\n  );\n  //   console.log(percentageTaskCompleted);\n\n  if (lengthTask === 0) {\n    return <footer>Você ainda não adicionou nenhuma tarefa</footer>;\n  }\n\n  return percentageTaskCompleted === 100 ? (\n    <footer>Você concluiu toda(s) as {lengthTask} tarefa(s). Parabens!</footer>\n  ) : (\n    <footer>\n      Você tem {lengthTask} tarefa(s) e {lengthTaskCompleted} (\n      {percentageTaskCompleted}%) já foram concluída(s)\n    </footer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}