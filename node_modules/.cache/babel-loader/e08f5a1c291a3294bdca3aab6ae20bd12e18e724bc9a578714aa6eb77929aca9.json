{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leonardo\\\\Desktop\\\\react-estudo\\\\estudo\\\\src\\\\TasksList.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Tasks from \"./Tasks\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TasksList({\n  task,\n  onDeleteTask,\n  onResetTask,\n  onToggleCompletedTask\n}) {\n  _s();\n  let tarefas;\n  const [order, setOrder] = useState(\"\");\n  if (order === \"default\" || order === \"\") {\n    tarefas = task;\n  }\n\n  // Essas ordenações foram feitas com ajuda do GPT\n  if (order === \"tasksComplete\") {\n    tarefas = task.slice().sort((a, b) => Number(a.completed) - Number(b.completed));\n  }\n  if (order === \"alphabeticalOrder\") {\n    tarefas = task.slice().sort((a, b) => a.task.localeCompare(b.task));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tarefas.map((item, i) => /*#__PURE__*/_jsxDEV(Tasks, {\n        item: item,\n        onClick: onDeleteTask,\n        onToggle: onToggleCompletedTask\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), tarefas.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: order,\n        onChange: e => setOrder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"\",\n          hidden: true,\n          children: \"Como voc\\xEA quer ordenar as tarefas?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Ordem de entrada (padr\\xE3o)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"tasksComplete\",\n          children: \"Tarefas Completas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alphabeticalOrder\",\n          children: \"Ordem Alfab\\xE9tica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-reset\",\n        onClick: onResetTask,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(TasksList, \"7RG2mDvhhr48GwuPeVY7qaKCelc=\");\n_c = TasksList;\nvar _c;\n$RefreshReg$(_c, \"TasksList\");","map":{"version":3,"names":["useState","Tasks","jsxDEV","_jsxDEV","Fragment","_Fragment","TasksList","task","onDeleteTask","onResetTask","onToggleCompletedTask","_s","tarefas","order","setOrder","slice","sort","a","b","Number","completed","localeCompare","children","map","item","i","onClick","onToggle","id","fileName","_jsxFileName","lineNumber","columnNumber","length","className","value","onChange","e","target","disabled","hidden","_c","$RefreshReg$"],"sources":["C:/Users/Leonardo/Desktop/react-estudo/estudo/src/TasksList.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Tasks from \"./Tasks\";\r\n\r\nexport default function TasksList({\r\n  task,\r\n  onDeleteTask,\r\n  onResetTask,\r\n  onToggleCompletedTask,\r\n}) {\r\n  let tarefas;\r\n  const [order, setOrder] = useState(\"\");\r\n\r\n  if (order === \"default\" || order === \"\") {\r\n    tarefas = task;\r\n  }\r\n\r\n  // Essas ordenações foram feitas com ajuda do GPT\r\n  if (order === \"tasksComplete\") {\r\n    tarefas = task\r\n      .slice()\r\n      .sort((a, b) => Number(a.completed) - Number(b.completed));\r\n  }\r\n\r\n  if (order === \"alphabeticalOrder\") {\r\n    tarefas = task.slice().sort((a, b) => a.task.localeCompare(b.task));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {tarefas.map((item, i) => (\r\n          <Tasks\r\n            item={item}\r\n            key={item.id}\r\n            onClick={onDeleteTask}\r\n            onToggle={onToggleCompletedTask}\r\n          />\r\n        ))}\r\n      </ul>\r\n      {tarefas.length > 0 && (\r\n        <div className=\"task-options\">\r\n          <select value={order} onChange={(e) => setOrder(e.target.value)}>\r\n            <option disabled value=\"\" hidden>\r\n              Como você quer ordenar as tarefas?\r\n            </option>\r\n            <option value=\"default\">Ordem de entrada (padrão)</option>\r\n            <option value=\"tasksComplete\">Tarefas Completas</option>\r\n            <option value=\"alphabeticalOrder\">Ordem Alfabética</option>\r\n          </select>\r\n          <button className=\"btn-reset\" onClick={onResetTask}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}